# CircleCI Configuration file


machine:
  pre:
    # we love jq
    - sudo apt-get update && sudo apt-get install -yq jq
    # install a reasonable version of Docker
    - sudo curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker


dependencies:
  override:
    # make sure docker is running
    - docker info
    # make sure we can login to ECR
    - eval $(aws ecr get-login)
    # install dependencies for loading ecs task definitions
    - pip install -U credstash awscli httpie
    - if [ "${CIRCLE_BRANCH/#feature/}" != "${CIRCLE_BRANCH}" ] || [ "${CIRCLE_BRANCH}" = "develop" ]; then echo "." > requirements.txt; fi
    - pyenv local 3.6.2
    - python3.6 -m pip install --extra-index-url $EXTRA_INDEX_URL globality_build
    - python3.6 -m middlefield globality build docker-base
    - ./build.{{ cookiecutter.project_name }}/docker-build.sh
    # publish the image
    - docker push ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_SHA1}


database:
  pre:
    - docker pull postgres
  override:
    # start postgres test database
    - docker run --rm --name {{ cookiecutter.project_name }}_db -e POSTGRES_DB={{ cookiecutter.project_name }}_test_db -e POSTGRES_USER={{ cookiecutter.project_name }} postgres:
        background: true


test:
  override:
    # run linting
    - docker run -it --rm -v $(pwd)/{{ cookiecutter.project_name }}/tests:/src/{{ cookiecutter.project_name }}/tests {{ cookiecutter.project_name }}:${CIRCLE_SHA1} lint
    # run unit tests
    - docker run -it --rm --link {{ cookiecutter.project_name }}_db:postgres -e {{ cookiecutter.project_name }}__POSTGRES__HOST=postgres -v $(pwd)/{{ cookiecutter.project_name }}/tests:/src/{{ cookiecutter.project_name }}/tests {{ cookiecutter.project_name }}:${CIRCLE_SHA1} test
    # stop test database
    - docker stop "{{ cookiecutter.project_name }}_db"


deployment:
  feature:
    branch: /feature\/.*/
    commands:
      - docker tag {{ cookiecutter.project_name }}:${CIRCLE_SHA1} ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_BRANCH//\//-}
      - docker push ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_BRANCH//\//-}
  dev:
    branch: develop
    commands:
      - docker tag {{ cookiecutter.project_name }}:${CIRCLE_SHA1} ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:develop
      - docker push ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:develop
      - mf globality build register-task-def dev {{ cookiecutter.project_name }} ${CIRCLE_SHA1}
      - aws ecs update-service --cluster "$(http -b http://color.dev.globality.io/service)" --service {{ cookiecutter.project_name }} --task-definition {{ cookiecutter.project_name }}-dev
  test:
    branch: /release\/2[0-9]{3}\.[0-5]?[0-9]\.[0-9]{1,3}$/
    commands:
      - docker tag {{ cookiecutter.project_name }}:${CIRCLE_SHA1} ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_BRANCH//\//-}
      - docker push ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_BRANCH//\//-}
      - mf globality build register-task-def test {{ cookiecutter.project_name }} ${CIRCLE_SHA1}
      - aws ecs update-service --cluster "$(http -b http://color.test.globality.io/service)" --service {{ cookiecutter.project_name }} --task-definition {{ cookiecutter.project_name }}-test
  staging:
    tag: /2[0-9]{3}\.[0-5]?[0-9]\.[0-9]{1,3}$/
    commands:
      - docker tag {{ cookiecutter.project_name }}:${CIRCLE_SHA1} ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_TAG}
      - docker push ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_TAG}
      - export AWS_DEFAULT_REGION='us-west-2' && eval $(aws ecr get-login)
      - export AWS_ECR_DOMAIN_WEST=$(echo ${AWS_ECR_DOMAIN} | sed 's/us-east-1/us-west-2/') && docker tag {{ cookiecutter.project_name }}:${CIRCLE_SHA1} ${AWS_ECR_DOMAIN_WEST}/{{ cookiecutter.project_name }}:${CIRCLE_TAG//\//-} && docker push ${AWS_ECR_DOMAIN_WEST}/{{ cookiecutter.project_name }}:${CIRCLE_TAG//\//-}
      - mf globality build register-task-def staging {{ cookiecutter.project_name }} ${CIRCLE_SHA1}
      - aws ecs update-service --cluster "$(http -b http://color.staging.globality.io/service)" --service {{ cookiecutter.project_name }} --task-definition {{ cookiecutter.project_name }}-staging
  hotfix:
    branch: /hotfix\/2[0-9]{3}\.[0-5]?[0-9]\.[0-9]{1,3}$/
    commands:
      - docker tag {{ cookiecutter.project_name }}:${CIRCLE_SHA1} ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_BRANCH//\//-}
      - docker push ${AWS_ECR_DOMAIN}/{{ cookiecutter.project_name }}:${CIRCLE_BRANCH//\//-}
